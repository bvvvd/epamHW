package com.epam.java.se.task1;

import org.junit.Test;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;

public class PenTest {

    @Test
    public void testThatEqualsPensAreEquals() throws Exception {
        final Pen pen1 = new Pen("blue", 1, PenType.BALLPOINT, 50, "Stabilo");
        final Pen pen2 = new Pen("blue", 1, PenType.BALLPOINT, 50, "Stabilo");

        assertThat(pen1.equals(pen2), is(true));
    }

    @Test
    public void testThatDifferentPensAreNotEquals() throws Exception {
        final Pen pen1 = new Pen("blue", 1, PenType.BALLPOINT, 50, "Stabilo");
        final Pen pen2 = new Pen("gO_ld15", 5, PenType.ROLLERBALL, 1000, "asd");

        assertThat(pen1.equals(pen2), is(false));
    }

    @Test
    public void testThatTheSamePenSelfEquals() throws Exception {
        final Pen pen1 = new Pen("Black", 1,
                PenType.ZERO_GRAVITY_PEN, 100000000, "Fisher");

        assertThat(pen1.equals(pen1), is(true));
    }

    @Test
    public void testThatPenIsNotEqualsToNull() throws Exception {
        final Pen pen1 = new Pen("blue", 1, PenType.BALLPOINT, 50, "Stabilo");

        assertThat(pen1.equals(null), is(false));
    }

    @Test
    public void testHashCodeForEqualsPens() throws Exception {
        final Pen pen1 = new Pen("blue", 1, PenType.BALLPOINT, 50, "Stabilo");
        final Pen pen2 = new Pen("blue", 1, PenType.BALLPOINT, 50, "Stabilo");

        assertThat(pen1.equals(pen2), is(true));
        assertEquals(pen1.hashCode(), pen2.hashCode());
    }

    @Test
    public void testHashCodeForNonEqualsPens() throws Exception {
        final Pen pen1 = new Pen("blue", 1, PenType.BALLPOINT, 50, "Stabilo");
        final Pen pen2 = new Pen("gO_ld15", 5, PenType.ROLLERBALL, 1000, "asd");

        assertThat(pen1.equals(pen2), is(false));
        assertNotEquals(pen1.hashCode(), pen2.hashCode());
    }

    @Test
    public void testToString() throws Exception {
        final Pen pen1 = new Pen("Black", 1,
                PenType.ZERO_GRAVITY_PEN, 1005, "Fisher");

        final String check =
                "Pen. Type: ZERO_GRAVITY_PEN, color of ink: Black, " +
                        "thickness of ink: 1, cost: $10.05, manufactured by: Fisher";

        assertEquals(pen1.toString(), check);
    }

}
